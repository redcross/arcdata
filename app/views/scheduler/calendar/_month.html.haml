%table.calendar
  %thead
    %tr
      /%th BOW
      %th.dow-header Sunday
      %th.dow-header Monday
      %th.dow-header Tuesday
      %th.dow-header Wednesday
      %th.dow-header Thursday
      %th.dow-header Friday
      %th.dow-header Saturday
  - date = month
  - next_month = month.next_month
  - if date.wday == 0
    %tbody
      %tr
        %td.month{colspan: 7}
          =render partial: 'monthly', locals: {date: date, editable: editable}
  - while date < next_month do
    %tbody
      %tr
        /%td BOW
        - while date < next_month do
          -if date == month
            - if date.wday > 0
              %td.month{colspan: date.wday}
                =render partial: 'monthly', locals: {date: date, editable: editable}
          %td.day{:"data-day" => date.to_s}
            =render partial: 'day', locals: {date: date, editable: editable}
          - date = date.tomorrow
          -if date.wday == 0
            - break
    - if calendar.weekly_groups.count > 0
      / If we get here, we are at the sunday of the week following the one we want to display,
      / or the month has ended.
      -if date == next_month
        - wdate = date.at_beginning_of_week
        - if wdate == next_month
          - next
      -else 
        - wdate = date.advance( days: -6)
      -if wdate < month
        - wdate = month
      %tbody{:"data-week" => wdate.at_beginning_of_week.to_s}
        =render partial: 'week', locals: {date: wdate, editable: editable}
-if request.xhr?
  :javascript
    $('#calendar-title').html(#{raw render('title', month: month).to_json})
    $('#view-as-links').html(#{raw view_as_links.to_json})
:javascript
  $("[data-toggle='tooltip']").tooltip()