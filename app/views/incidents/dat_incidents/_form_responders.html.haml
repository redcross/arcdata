.row
  .col-sm-12
    =f.inputs "Responders" do
      =f.semantic_fields_for :incident do |f|
        =f.semantic_errors :responder_assignments
        - template = nil
        - f.semantic_fields_for :responder_assignments, Incidents::ResponderAssignment.new(incident: f.object), child_index: 'new_responder_assignment' do |r|
          - template = render('responder_assignment_fields', f: r)
        %table.table.form-table#responder-table{data: {template: "#{template}"}}
          %thead
            %tr
              %th Name
              %th Role
              %th Was Flex
              /%th Response
              %th Actions
          %tbody
            %tr
              =f.semantic_fields_for :team_lead do |f|
                %td.team-lead-name
                  =f.input :person, as: :person_typeahead, text_value: lambda{|obj| Roster::Person.where(id: obj.person_id).first.try(:full_name)}, label: "", filter: {for_region: f.object.incident.region_id}
                  =f.input :role, as: :hidden, input_html: {value: "team_lead"}
              %td Team Lead
              /%td Available
              %td
              %td
            =f.semantic_fields_for :responder_assignments do |r|
              =render 'responder_assignment_fields', f: r
          %tfoot
            %tr
              %th(colspan=5)
                %h4
                  Responders On Call:
                  =link_to_add_association 'Add Other Responder', f, :responder_assignments, "data-association-insertion-node" => "#responder-table tbody", "data-association-insertion-method" => "append", class: "btn btn-default btn-sm"
            %tr
              %th Name
              %th Shift Position
            - (sched = scheduler_service.scheduled_responders(time: f.object.created_at, shift_territories: f.object.response_territory.shift_territories)).each do |shift|
              %tr
                %td=shift.person.full_name
                %td=shift.shift.name
                %td
                  %button.btn.btn-primary.add-responder{data: {person_text: shift.person.full_name, person_id: shift.person_id, was_flex: false}} Add Responder
                %td(colspan=2)
            - sched_people = sched.map(&:person_id)
            - scheduler_service.flex_responders(time: f.object.created_at, shift_territories: f.object.response_territory.shift_territories, exclude: sched_people).each do |flex|
              %tr
                %td=flex.person.full_name
                %td Flex
                %td
                  %button.btn.btn-primary.btn-sm.add-responder{data: {person_text: flex.person.full_name, person_id: flex.person.id, was_flex: true}} Add Responder
                %td(colspan=2)

        %p=link_to_add_association 'Add Other Responder', f, :responder_assignments, "data-association-insertion-node" => "#responder-table tbody", "data-association-insertion-method" => "append", class: "btn btn-primary"
.row
  .col-sm-12
    =f.actions do
      %a.btn.btn-default{href: '#', data: {target: "#form_services", "toggle"=>"remote-tab"}} Go to Services Page